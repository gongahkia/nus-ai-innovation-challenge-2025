package com.yipee.yipee.SalesData;

import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;
import java.time.LocalDateTime;
import java.util.List;

@Service
public class SalesDataServiceImpl implements SalesDataService {

    @Autowired
    private SalesDataRepository salesDataRepository;

    @Override
    public SalesData addSalesDataByCompany(SalesData salesData) {
        return salesDataRepository.save(salesData);
    }

    @Override
    public SalesData updateSalesDataByCompany(Long salesDataId, SalesData updatedSalesData, Long companyId) {
        return salesDataRepository.findById(salesDataId).map(existingData -> {
            if (!existingData.getCompanyId().equals(companyId)) {
                throw new IllegalArgumentException("Sales data does not belong to the given company.");
            }
            existingData.setAmount(updatedSalesData.getAmount());
            existingData.setDateTime(updatedSalesData.getDateTime());
            existingData.setItemBatchId(updatedSalesData.getItemBatchId());
            return salesDataRepository.save(existingData);
        }).orElseThrow(() -> new IllegalArgumentException("Sales data not found."));
    }

    @Override
    public void deleteSalesData(Long id) {
        salesDataRepository.deleteById(id);
    }

    @Override
    public List<SalesData> getSalesDataByCompany(Long companyId) {
        return salesDataRepository.findByCompanyId(companyId);
    }

    @Override
    public List<SalesData> getSalesDataByTimeAndCompany(Long itemBatchId, LocalDateTime dateTime) {
        return salesDataRepository.findByItemBatchIdAndDateTime(itemBatchId, dateTime);
    }

    //total revenue generated by the company
    @Override
    public int getTotalSalesByCompany(Long companyId) {
        return salesDataRepository.getTotalSalesByCompany(companyId);
    }

    //get the total sales at that point of time
    @Override
    public int getTotalSalesByTimeAndCompany(Long itemBatchId, LocalDateTime dateTime) {
        return salesDataRepository.getTotalSalesByTimeAndCompany(itemBatchId, dateTime);
    }

    //get the sales data by date
    @Override
    public List<SalesData> getSalesDataByDate(LocalDateTime date) {
        return salesDataRepository.findByDate(date);
    }
}
